# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Users {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  username: String!
  password: String
  name: String!
  email: String!
  phone: String!
  avatar: String
  role: UserRole!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum UserRole {
  ADMIN
  GUIDE
  COLLABORATOR
}

type CreateAccountOutput {
  ok: Boolean!
  error: String
  message: String
}

type LoginOutput {
  ok: Boolean!
  error: String
  message: String
  access_token: String
  role: String
}

type Bus {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  description: String!
  number: String!
  type: BusType!
  capacity: Float!
  busCompany: BusCompany!
}

enum BusType {
  NORMAL
  MINIBUS
  BIG
}

type BusCompany {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  address: String!
  contact: String!
  phone: String!
  email: String!
  buses: [Bus!]
}

type CreateBusCompanyOutput {
  ok: Boolean!
  error: String
  message: String
}

type GetBusCompaniesOutput {
  total: Float!
  totalPage: Float!
  page: Float!
  data: [BusCompany!]!
}

type SearchBusCompaniesOutput {
  total: Float!
  totalPage: Float!
  page: Float!
  data: [BusCompany!]!
}

type CreateBusOutput {
  ok: Boolean!
  error: String
  message: String
}

type Participant {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  sexuality: Sexuality!
  contact: String!
  birth: DateTime!
  tag: String!
  discount: Boolean!
  deposit: Float!
  roomMateTarget: String!
  department: String!
  position: String!
  company: String!
  companyGroup: String!
  companyContact: String!
  group: Group!
}

enum Sexuality {
  MALE
  FEMALE
}

type Group {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  participants: [Participant!]!
}

input TourInput {
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  description: String
  gatheringPlace: String!
  section: SectionInput!
  section_id: String!
}

input SectionInput {
  name: String!
  sponsor: String
  year: Float!
  tours: [TourInput!]
}

type Query {
  users: [Users!]!
  user: Users!
  busCompanies(input: GetBusCompaniesInput!): GetBusCompaniesOutput!
  busCompany(name: String!): BusCompany!
  searchBusCompanies(input: SearchBusCompaniesInput!): SearchBusCompaniesOutput!
  getBusCompanies: [Bus!]!
  sections: [Section!]!
  toursBySection(section_id: String!): [Tour!]!
  tourById(_id: String!): Tour!
}

input GetBusCompaniesInput {
  page: Float!
}

input SearchBusCompaniesInput {
  name: String!
}

type Section {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  sponsor: String
  year: Float!
  tours: [Tour!]
}

type Tour {
  _id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  description: String
  gatheringPlace: String!
  section: Section!
  section_id: String!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(loginInput: LoginInput!): LoginOutput!
  createBusCompany(input: CreateBusCompanyInput!): CreateBusCompanyOutput!
  deleteBusCompanies(input: DeleteBusCompanyInputs!): CreateBusCompanyOutput!
  createBus(input: CreateBusInput!): CreateBusOutput!
  createSection(input: CreateSectionInput!): Section!
  deleteSection(_id: String!): Boolean!
  createTour(input: CreateTourInput!): Boolean!
  deleteTour(_id: DeleteTourInput!): Boolean!
}

input CreateAccountInput {
  username: String!
  password: String!
  role: UserRole!
}

input LoginInput {
  username: String!
  password: String
}

input CreateBusCompanyInput {
  name: String!
  address: String!
  phone: String!
  email: String!
  contact: String!
}

input DeleteBusCompanyInputs {
  _ids: [UUID!]!
}

"""A simple UUID parser"""
scalar UUID

input CreateBusInput {
  number: String!
  type: BusType!
  capacity: Float!
  busCompanyId: UUID!
}

input CreateSectionInput {
  name: String!
  sponsor: String
  year: Float!
}

input CreateTourInput {
  _id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  startDate: DateTime
  endDate: DateTime
  description: String
  gatheringPlace: String
  section: SectionInput
  section_id: String
}

input DeleteTourInput {
  _id: [String!]!
}